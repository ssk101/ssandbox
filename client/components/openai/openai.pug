header
  .group.pad.a.options
    .group.pad.b.selects
      .labelled
        label Model
        facade-select(
          (select)=this.selectModel(e.value),
          value=this.model.id
        )
          each model in this.sortedModels
            option(
              [value]=model.id,
              disabled=!model.enabled,
            )= model.id

      .labelled
        label Personality (instructions)
        facade-select(
          (select)=this.selectPersonality(e.value),
          value=this.model.personalityId,
        )
          each personalityId in Object.keys(this.model.personalities || {})
            option(
              [value]=personalityId
            )= this.model.personalities[personalityId].name

    .group.b.checkboxes
      each context in Object.keys(this.model.contexts || {})
        .group.c.labelled
          label= context
          facade-input
            input(
              type='checkbox',
              checked=this.model.contexts[context],
              (input)=this.toggleContext(context, e.target.checked),
            )

  .group.pad.a
    .labelled
      label Instructions
      textarea.instructions(
        placeholder='Instructions',
        autocomplete='off',
        autocorrect='off',
        spellcheck='true',
        (input)=this.onInstructions(e),
      )

.group.pad.a.prompt(is-code=this.isCode)
  .labelled
    label Input
    textarea.input(
      id='input',
      placeholder='Prompt',
      (input)=this.onInput(e),
      autocomplete='off',
      autocorrect='off',
      spellcheck='false',
    )

  .buttons
    facade-button.submit(
      (click)=this.submitPrompt(),
      disabled=!this.canSubmit,
    ) Submit Prompt
    facade-button.abort(
      (click)=this.abortResponse(),
      disabled=!this.isResponding,
    ) Abort Response

    facade-button(
      (click)=this.clearMessageHistory(),
    ) Clear chat history

    .responding(hidden=!this.isResponding)= this.receivingResponseLabel()

.group.pad.a.previews(is-code=this.isCode)
  .labelled
    label= `Code preview ${this.langFor('input') ? '(best guess: ' + this.langFor('input') + ')' : ''}`
    pre.preview(id='preview')
      code(is-code=this.isCode)= this.input

.group.pad.a.response
  .labelled
    - const label = this.langFor('response') ? `Best guess: ${this.langFor('response')}` : this.selectedPersonality?.name
    label= label
    pre.response(id='response')
      code(is-code=this.isCode).
        Awaiting input...